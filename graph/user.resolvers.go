package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"
	"golang-whatsapp-clone/auth"
	"golang-whatsapp-clone/graph/model"
)

// Me is the resolver for the me field.
func (r *queryResolver) Me(ctx context.Context) (*model.User, error) {
	userCtx := auth.GetUserFromContext(ctx)
	if userCtx == nil {
		return nil, nil
	}

	// fetch user from database
	user, err := r.DBQueries.GetUserByEmail(ctx, userCtx.Email)
	if err != nil {
		return nil, fmt.Errorf("user not found: %w", err)
	}

	return &model.User{
		ID:        user.ID.String(),
		Email:     user.Email,
		Name:      &user.Name.String,
		AvatarURL: &user.AvatarUrl.String,
		CreatedAt: user.CreatedAt.Time,
		UpdatedAt: user.UpdatedAt.Time,
	}, nil
}
